name: CI/CD Pipeline

on:
    push:
        branches:
            - main
            - prod

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2  # 오타 수정

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.9'
        
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install poetry
                poetry install

            # 환경 변수 설정 (GitHub Secrets에서 불러오기)
            - name: Set environment variables
              run: |
                echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
                echo "TEST_DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}" >> $GITHUB_ENV
                echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> $GITHUB_ENV
                echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
                echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
                echo "KAKAO_RESTAPI_KEY=${{ secrets.KAKAO_RESTAPI_KEY }}" >> $GITHUB_ENV
                echo "KAKAO_REDIRECT_URL=${{ secrets.KAKAO_REDIRECT_URL }}" >> $GITHUB_ENV  # 오타 수정
                echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
                echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
                echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> $GITHUB_ENV
                echo "REFRESH_TOKEN_EXPIRE_DAYS=${{ secrets.REFRESH_TOKEN_EXPIRE_DAYS }}" >> $GITHUB_ENV

    build:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            
            - name: Log in to Amazon ECR
              uses: aws-actions/amazon-ecr-login@v1
              with:
                region: ${{ secrets.AWS_REGION }}
                access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            - name: Build Docker image
              run: |
                docker build -t wellnessapp .
                docker tag wellnessapp:latest ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}

            - name: Push Docker image to ECR
              run: |
                docker push ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}

    deploy:
        name: Deploy to Production
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/prod'

        steps:
            - name: Deploy to ECS
              run: |
                aws ecs update-service \
                  --cluster my-cluster \
                  --service my-service \
                  --force-new-deployment
